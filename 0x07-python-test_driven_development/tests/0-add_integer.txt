

Test 0-add_integer.py
===========================

-This module defines an integer addition function ``add_integer(a, b=98)``.
-Note all floating point values are typecasted
-Program provides an optional second parameter

Usage
=====
# First Import function
# Begin test with different types

>>> add_integer = __import__('0-add_integer').add_integer


# Test with NaN 

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer(2, float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer


# Test with whole numbers
>>> add_integer(2, 3)
5

# Test with negative values
>>> add_integer(2, -3)
-1

# Test with floating point values
>>> add_integer(2.0, 2.0)
4

>>> add_integer(-2.5, -1.5)
-3

# Test with optional second argument
>>> add_integer(1)
99

# Test with wrong types
>>> add_integer("jump", 5)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(5, None)
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer(float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

